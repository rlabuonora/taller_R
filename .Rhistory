relig
levels(relig$relig)
levels(relig$relig_factor)
rincome <- gss_cat %>%
group_by(rincome) %>%
summarize(
age = mean(age, na.rm=TRUE),
tvhours = mean(tvhours, na.rm=TRUE),
n=n()
)
ggplot(rincome,
aes(tvhours, rincome)) + geom_point()
partyid = fct_recode(partyid,
"Republican, strong" = "Strong republican",
"Republican, weak" = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak" = "Not str democrat",
"Democrat, strong" = "Strong democrat"
)) %>%
count(partyid)
partyid = fct_recode(partyid,
"Republican, strong" = "Strong republican",
"Republican, weak" = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak" = "Not str democrat",
"Democrat, strong" = "Strong democrat"
)) %>%
count(partyid)
gss_cat
names(gss_cat)
partyid = fct_recode(partyid,
"Republican, strong" = "Strong republican",
"Republican, weak" = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak" = "Not str democrat",
"Democrat, strong" = "Strong democrat"
)) %>%
count(partyid)
partyid = fct_recode(partyid,
"Republican, strong" = "Strong republican",
"Republican, weak" = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak" = "Not str democrat",
"Democrat, strong" = "Strong democrat"
)) %>%
count(partyid)
gss_cat
gss_cat %>%
mutate(
partyid = fct_recode(partyid,
"Republican, strong" = "Strong republican",
"Republican, weak" = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak" = "Not str democrat",
"Democrat, strong" = "Strong democrat"
)) %>%
count(partyid)
gss_cat %>%
mutate(partyid = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
count(partyid)
gss_cat %>%
mutate(relig = fct_lump(relig, n = 10)) %>%
count(relig, sort = TRUE)
gss_cat %>% count(relig, sort = TRUE)
95+93+71+32+23+15
95+93+71+32+23+15+224
+93+71+32+23+15+224
gss_cat %>%
mutate(partyid = fct_recode(partyid,
"Republican" = "Strong republican",
"Republican" = "Not str republican",
"Other" = "Ind,near rep",
"Other" = "Ind,near dem",
"Democrat" = "Not str democrat",
"Democrat" = "Strong democrat",
"AOther" = "No answer",
"AOther" = "Don't know",
"AOther" = "Other party"
)) %>%
count(partyid)
?fct_lump
gss_cat %>%
mutate(relig = fct_lump(relig, n = 10, other_level="otros")) %>%
count(relig, sort = TRUE)
+93+71+32+23+15+224
+93+71+32+23+15
library(Hmisc)
lyrics <- function(first, last) {
paste(sapply(first:last, verse), collapse = "\n")
}
first_line <- function(n) {
if (n == 0) {
a <- "no more bottles"
}
else if (n == 1) {
a <- sprintf("%d bottle", n)
}
else {
a <- sprintf("%d bottles", n)
}
lyrics <- "%s of beer on the wall, %s of beer."
sprintf(lyrics, capitalize(a), a)
}
second_line <- function(n) {
if (n == 0) {
return("Go to the store and buy some more, 99 bottles of beer on the wall.\n")
}
else if (n == 1) {
a <- "it"
b <- "no more bottles"
}
else if (n == 2) {
a <- "one"
b <- "1 bottle"
}
else {
a <- "one"
b <- sprintf("%d bottles", n-1)
}
lyrics <- "Take %s down and pass it around, %s of beer on the wall.\n"
sprintf(lyrics, a, b)
}
verse <- function(number) {
paste(sep = "\n",
first_line(number),
second_line(number)
)
}
lyrics(99, 1)
lyrics(99, 0)
verse(99)
verse(0)
lyrics <- "%s of beer on the wall, %s of beer."
lyrics
sprintf(lyrics, "algo")
sprintf(lyrics, "algo", "nada")
setwd("~/taller_git")
source('~/taller_git/main.R')
sectores <- tibble(ciiu = c("0111", "0110", "0112"),
giro = c("arroz", "soja", "carne"))
expors <- tibble(empresa = c("ZZZ", "YYY", "XXX", "WWW", "NNN"),
expors = c(10000, 9000,    8000, 3000, 1000 ))
library(tibble)
sectores <- tibble(ciiu = c("0111", "0110", "0112"),
giro = c("arroz", "soja", "carne"))
expors <- tibble(empresa = c("ZZZ", "YYY", "XXX", "WWW", "NNN"),
expors = c(10000, 9000,    8000, 3000, 1000 ))
print("hola")
getwd()
setwd("~/taller_git")
library(tibble)
sectores <- tibble(ciiu = c("0111", "0110", "0112"),
giro = c("arroz", "soja", "carne"))
expors <- tibble(empresa = c("ZZZ", "YYY", "XXX", "WWW", "NNN", "RRR"),
expors = c(10000, 9000,    8000, 3000, 1000, 500 ),
ciiu   = c("0111", "0111", "0112", "0110", "1011"))
sectores <- tibble(ciiu = c("0111", "0110", "0112"),
giro = c("arroz", "soja", "carne"))
expors <- tibble(empresa = c("ZZZ", "YYY", "XXX", "WWW", "NNN", "RRR"),
expors = c(10000, 9000,    8000, 3000, 1000, 500 ),
ciiu   = c("0111", "0111", "0112", "0110", "1011", "0112"))
source('~/taller_git2/main.R')
source('~/taller_git2/main.R')
expors
sectores
print("Hello")
source('~/taller_git2/main.R')
cat("algo")
print("algo")
print("algo") %>% str
library(dplyr)
print("algo") %>% str
cat("algo") %>% str
print("algo") %>% is.vector
cat("algo") %>% is.vector
cat("algo") %>% typeof
download_file("http://www.asdar-book.org/datasets/70042108.zip")
install.packages("dwapi")
library(dwapi)
download_file("http://www.asdar-book.org/datasets/70042108.zip")
?download_file
url <- "http://www.asdar-book.org/datasets/70042108.zip"
basename(url)
download_file("http://www.asdar-book.org/datasets/70042108.zip", basename(url))
download.file("http://www.asdar-book.org/datasets/70042108.zip", basename(url))
list.files()
cars
iris
setwd("~/")
# Chunk 1
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
# Chunk 2
# cargamos los datos
tips <- read.csv("http://www.ggobi.org/book/data/tips.csv")
head(tips)
# Chunk 3
ggplot(data = tips, aes(x = totbill, y = tip)) +  geom_point()
# Chunk 1
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
# Chunk 2
# cargamos los datos
tips <- read.csv("http://www.ggobi.org/book/data/tips.csv")
head(tips)
# Chunk 3
ggplot(data = tips, aes(x = totbill, y = tip)) +  geom_point()
# Chunk 1
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
library(ggplot2)
# Chunk 2
# cargamos los datos
tips <- read.csv("http://www.ggobi.org/book/data/tips.csv")
head(tips)
# Chunk 3
ggplot(data = tips, aes(x = totbill, y = tip)) +  geom_point()
devtools::install_github("yihui/xaringan")
library("yihui/xaringan")
?scale_colour_brewer
tips <- read.csv("http://www.ggobi.org/book/data/tips.csv")
tips
head(tips)
ggplot(tips, aes(x=totbill, y = tip)) + geom_point()
tips <- read.csv("http://www.ggobi.org/book/data/tips.csv")
View(tips)
plot(tips)
tips$totbill
tips$tip
plot(tips$totbill, tips$tip)
ggplot(tips, aes(x=totbill, y=tip)) + geom_point()
ggplot(tips, aes(x=totbill, y=tip, color=sex)) + geom_point()
ggplot(tips, aes(x=totbill, y=10, color=sex)) + geom_point()
ggplot(tips, aes(x=totbill, y=tip, color=sex)) + geom_point()
ggplot(tips, aes(x=totbill, y=tip, color=sex, size=size)) + geom_point()
ggplot(tips) + geom_point(aes(x=totbill, y=tip, color=sex, size=size))
ggplot(tips) + geom_point(aes(x=totbill, y=tip, color="red", size=size))
ggplot(tips) + geom_point(aes(x=totbill, y=tip, color="red", size=size, alpha = 1/3))
ggplot(tips) + geom_point(aes(x=totbill, y=tip, color="red", size=size, alpha = 0))
ggplot(tips) + geom_point(aes(x=totbill, y=tip, color="red", size=size, alpha = 0.0001))
ggplot(tips) + geom_point(aes(x=totbill, y=tip, color="red", size=size, alpha = 1))
ggplot(tips) + geom_point(aes(x=totbill, y=tip, color="red", size=size))
ggplot(tips) + geom_point(aes(x=totbill, y=tip, color="red", size=size), alpha = 0.5)
sqrt(tips$size)
func <- function(x) { x + 1 }
func(2)
ggplot(data = tips, aes(x = totbill, y = tip, colour = sex)) +
geom_point() +
scale_x_continuous(name ="Total de la cuenta") +
scale_y_continuous(name = "Propina") +
scale_color_discrete("Sexo")
ggplot(data = tips, aes(x = totbill, y = tip, colour = sex)) +
geom_point() +
scale_x_continuous(name ="Total de la cuenta") +
scale_y_continuous(name = "Propina") +
scale_color_discrete("Sexo") + geom_smooth()
ggplot(data = tips, aes(x = totbill, y = tip, colour = sex)) +
geom_point() +
scale_x_continuous(name ="Total de la cuenta") +
scale_y_continuous(name = "Propina") +
scale_color_discrete("Sexo") + geom_smooth() + facet_grid(sex)
ggplot(data = tips, aes(x = totbill, y = tip, colour = sex)) +
geom_point() +
scale_x_continuous(name ="Total de la cuenta") +
scale_y_continuous(name = "Propina") +
scale_color_discrete("Sexo") + geom_smooth() + facet_grid(~sex)
diamonds
diamonds
diamonds[1, 2]
diamonds[1, ]
diamonds[,2]
1:10
diamonds[c(1, 2, 3, 4, 5),]
diamonds[1:10,]
muestra <- diamonds[1:1000,]
muestra
nrow(diamonds)
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
dsamp
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
dsamp
head(diamonds)
dsmap
dsamp
dsamp
diamonds
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
diamonds <- diamonds
ggplot(dsamp, aes(x=price, y = carat)) + geom_point()
ggplot(dsamp, aes(x=price, y = carat, color=cut)) + geom_point()
View(dsamp)
ggplot(dsamp, aes(x=price, y = carat, color=cut,alpha = 1/34)) + geom_point()
ggplot(dsamp, aes(x=price, y = carat, color=cut,alpha = 1/3)) + geom_point()
ggplot(dsamp, aes(x=price, y = carat, color=cut,alpha = 1/3)) + geom_point() + labs(title="Precio vs. Carat")
sqrt(12)
library(shiny); runApp('geocoding/prototipo/main.R')
ggplot(dsamp, aes(x=price, y = carat, color=cut,alpha = 1/3)) + geom_point() + scale_color_brewer("Purple")
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
library(ggplot2)
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
ggplot(dsamp, aes(x=price, y = carat, color=cut,alpha = 1/3)) + geom_point() + scale_color_brewer("Purple")
ggplot(dsamp, aes(x=price, y = carat, color=cut,alpha = 1/3)) + geom_point() + scale_color_brewer("Purple") + scale_y_continuous(breaks=c(1, 2, 3))
?scale_y_continuous
ggplot(dsamp, aes(x=price, y = carat, color=cut,alpha = 1/3)) + geom_point() + scale_color_brewer("Purple") + scale_y_continuous(breaks=c(1, 2, 3), labels=c("1 oz", "2 oz", "3 oz"))
c(1, 2, 3, )
c(1, 2, 3 )
1, 2, 3,
1, 2, 3, 4
c(1, 2, 3, 4)
c(1, 2, 3, 4) + c(2, 3, 4, 5)
c(1, 2, 3, 4) + 2
ggplot(dsamp, aes(x=price, y = carat, color="red",alpha = 1/3)) + geom_point() + scale_color_brewer("Purple") + scale_y_continuous(breaks=c(1, 2, 3), labels=c("1 oz", "2 oz", "3 oz"))
ggplot(dsamp, aes(x=price, y = carat, color="red",alpha = 1/3)) + geom_point() + scale_color_brewer("Purple") + scale_y_continuous(breaks=c(1, 2, 3), labels=c("1 oz", "2 oz", "3 oz"))
ggplot(dsamp, aes(x=price, y = carat, color="red",alpha = 1/3)) + geom_point() + scale_y_continuous(breaks=c(1, 2, 3), labels=c("1 oz", "2 oz", "3 oz"))
ggplot(dsamp, aes(x=price, y = carat, color="red",alpha = 1/3)) + geom_point() + scale_y_continuous(breaks=c(1, 2, 3), labels=c("1 oz", "2 oz", "3 oz")) + facet_wrap(~cut)
ggplot(dsamp, aes(x=price, y = carat, color="red",alpha = 1/3)) + geom_point() + scale_color_brewer("Purple") + scale_y_continuous(breaks=c(1, 2, 3), labels=c("1 oz", "2 oz", "3 oz"))
ggplot(dsamp, aes(x=price, y = carat, color=cut,alpha = 1/3)) + geom_point() + scale_color_brewer("Purple") + scale_y_continuous(breaks=c(1, 2, 3), labels=c("1 oz", "2 oz", "3 oz")) + facet_wrap(~cut)
ggplot(dsamp, aes(x=price, y = carat, color=cut,alpha = 1/3)) + geom_point()  + scale_y_continuous(breaks=c(1, 2, 3), labels=c("1 oz", "2 oz", "3 oz")) + facet_wrap(~cut)
ggplot(dsamp, aes(x=price, y = carat, color=cut,alpha = 1/3)) + geom_point()  + scale_y_continuous(breaks=c(1, 2, 3), labels=c("1 oz", "2 oz", "3 oz")) + facet_wrap(~cut) + ggtitle("Precio de los diamantes por peso")
setwd("~/taller_R/Taller4-Wrangling/src")
library(dplyr)
msleep <- read.csv("../data/msleep_ggplot2.csv")
msleep
names(msleep)
filter(msleep, genus == "")
View(msleep)
filter(msleep, genus == "Aotus")
select(msleep, genus)
select(msleep, genus, vore, order)
mutate(msleep, sleep_no_rem = sleep_total - sleep_rem)
mutate(msleep, sleep_no_rem = sleep_total - sleep_rem)
d <- mutate(msleep, sleep_no_rem = sleep_total - sleep_rem)
View(d)
select(msleep, -order)
names(msleep)
select(msleep, -starts_with("sleep"))
select(msleep, -starts_with("sleep")) %>% names
select(msleep, starts_with("sleep")) %>% names
select(msleep, starts_with("sleep"))
names(select(msleep, starts_with("sleep")))
filter(msleep, sleep > 16)
filter(msleep, sleep_total > 16)
msleep[which(msleep$sleep_total > 16)]
msleep[which(msleep$sleep_total > 16),]
which()
msleep$sleep_total > 16
msleep$sleep_total > c(16, 16, 16, 16)
msleep$sleep_total > 16
which(msleep$sleep_total > 16)
msleep[which(msleep$sleep_total > 16),]
which(msleep$sleep_total > 16)
msleep[c(2, 18, 20, 22, 37)]
msleep[c(2, 18, 20, 22, 37),]
msleep[c(2, 18, 20, 22, 37),c("name", "genus")]
msleep %>% filter(sleep_total > 16) %>% select(name, genus)
msleep %>% filter(sleep_total > 16) %>% arrange(sleep_total)
msleep %>% filter(sleep_total > 16) %>% arrange(-sleep_total)
msleep %>% filter(sleep_total > 16) %>% arrange(desc(sleep_total))
select(filter(msleep, sleep_total > 16), genus, name)
mutate(select(filter(msleep, sleep_total > 16), genus, name), "animal")
msleep %>% filter(sleep_total > 16) %>% arrange(-sleep_total)
msleep %>%  filter(sleep_total > 16) %>% select(genus, name) %>% mutate("animal")
msleep %>%
filter(sleep_total > 16) %>%
select(genus, name, starts_with("sleep_total")) %>%
mutate(animal = "animal") %>%
mutate(sleep_no_rem = sleep_total-sleep_rem)
msleep %>%
filter(sleep_total > 16) %>%
select(genus, name, starts_with("sleep")) %>%
mutate(animal = "animal") %>%
mutate(sleep_no_rem = sleep_total-sleep_rem)
|   |rut           |razon_social      | empleados|
|:--|:-------------|:-----------------|---------:|
|20 |213154420012  |AAAAA BBBBBBBBB   |         5|
|21 |215085700011  |CCCCCCCC S.A.     |         2|
|22 |214203290014  |DDDDDDD S.A.      |         1|
|23 |212152060010  |EEEEE FFFFFF S.A. |       185|
|24 |1215917590016 |HHHHHH S.A.       |         6|
|25 |2215917590016 |HHHHHH S.A.       |         1|
list.files('data')
getwd
getwd()
list.files('../data')
read_csv('../data/ruts_ejemplo.csv')
library(readr)
read_csv('../data/ruts_ejemplo.csv')
ruts <- read_csv('../data/ruts_ejemplo.csv')
View(ruts)
?read_csv
ruts <- read_csv('../data/ruts_ejemplo.csv', col_types  ="ccic")
View(ruts)
nchar(ruts$rut)
if_else(nchar(ruts$rut)>12, "bien", "mal")
if_else(nchar(ruts$rut)>12, "mal", "bien")
mutate(ruts, if_else(nchar(rut) > 12, "mal", "bien"))
mutate(ruts, rut_corregido = if_else(nchar(rut) > 12, "mal", "bien"))
mutate(ruts, rut_corregido = if_else(nchar(rut) > 12, substr(rut, 2, 13), "bien"))
mutate(ruts, rut_corregido = if_else(nchar(rut) > 12, substr(rut, 2, 13), rut_corregido))
mutate(ruts, rut_corregido = if_else(nchar(rut) > 12, substr(rut, 2, 13), rut))
mutate(ruts,
rut_corregido = if_else(nchar(rut) > 12, substr(rut, 2, 13), rut),
local= if_else(nchar(rut)> 12, substr(rut, 1, 1), 1))
mutate(ruts,
rut_corregido = if_else(nchar(rut) > 12, substr(rut, 2, 13), rut),
local= if_else(nchar(rut)> 12, substr(rut, 1, 1), "1"))
mutate(ruts,
rut_corregido = if_else(nchar(rut) > 12, substr(rut, 2, 13), rut),
local= ifelse(nchar(rut)> 12, substr(rut, 1, 1), "1"))
substr("algo", 2, 3)
mutate(ruts,
rut_corregido = if_else(nchar(rut) > 12, substr(rut, 2, 13), rut),
local= ifelse(nchar(rut)> 12, substr(rut, 1, 1), "1"))
mutate(ruts,
rut_corregido = if_else(nchar(rut) > 12, substr(rut, 2, 13), rut),
local= if_else(nchar(rut)> 12, substr(rut, 1, 1), "1"))
?if_else
?ifelse
df1 <- data_frame(x = c(1, 2), y = 2:1)
df2 <- data_frame(x = c(1, 3), a = 10, b = "a")
df2
df1
left_join(df1, df2)
right_join(df1, df2)
df2
df1
right_join(df1, df2)
df1
df2
right_join(df1, df2)
inner_join(df1, df2)
full_join(df1, df2)
df1
df2
inner_join(df1, df2)
semi_join(df1, df2)
df1
df2
semi_join(df1, df2)
inner_join(df1, df2)
?semi_join
df3 <- data_frame(x = c(1, 1, 4), z="algo")
df1
df3
left_join(df1, df3)
df1
df3
inner_join(df1, df3)
semi_join(df1, df3)
df1
df2
anti_join(df1, df2)
df3
df1
df3
anti_join(df1, df3)
buscar_clasificaciones <- function(vector) {
buscar_clasificacion <- function(ciiu) {
read_tsv("../data/ciius.csv", col_types = list(col_character(), col_character())) %>%
filter(CIIU==ciiu) %>%
select(Clasificacion) %>%
as.character
}
sapply(vector, buscar_clasificacion)
}
buscar_clasificaciones(c("111", "112", "3311", "3510"))
read.csv("ciius.csv")
library(readr)
ciius <- read_csv("~/taller_R/Taller4-Wrangling/data/ciius.csv")
View(ciius)
ciius <- read_csv("~/taller_R/Taller4-Wrangling/data/ciius.csv",sep=/t)
ciius <- read_csv("~/taller_R/Taller4-Wrangling/data/ciius.csv",sep="/t")
ciius <- read_csv("~/taller_R/Taller4-Wrangling/data/ciius.csv",sep="\t")
?read_csv
ciius <- read_csv("~/taller_R/Taller4-Wrangling/data/ciius.csv",delim="\t")
ciius <- read.csv("~/taller_R/Taller4-Wrangling/data/ciius.csv",sep="\t")
View(ciius)
View(buscar_clasificaciones)
View(ciius)
buscar <- buscar_clasificaciones(c("111", "112", "3311", "3510"))
buscar <- c("111", "112", "3311", "3510")
?inner_join
inner_join(buscar, ciius)
as.data.frame(buscar)
inner_join(buscar, ciius)
buscar2 <-as.data.frame(buscar)
inner_join(buscar2,ciius)
View(buscar2)
?as.data.frame
buscar2 <- as.data.frama(buscar, col.names="CIIU")
buscar2 <- as.data.frame(buscar, col.names= "CIIU")
inner_join(buscar2,ciius)
buscar2
buscar2 <- as.data.frame(buscar, col.names= "CIIU")
buscar2
names(buscar2)
buscar2 <- as.data.frame(buscar, col.names= c("CIIU"))
buscar2
buscar2 <- as.data.frame(CIIU=buscar, col.names= c("CIIU"))
buscar2 <- as.data.frame(CIIU=buscar)
buscar2 <- data_frame(CIIU=buscar)
buscar2
inner_join(buscar2,ciius)
buscar2 <- data_frame(CIIU=as.numeric(buscar))
inner_join(buscar2,ciius)
