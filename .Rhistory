expect_equal(
verse(99),
paste(sep = "\n",
"99 bottles of beer on the wall, 99 bottles of beer.",
"Take one down and pass it around, 98 bottles of beer on the wall.\n"
)
)
})
test_that("last generic verse", {
expect_equal(
verse(3),
paste(sep = "\n",
"3 bottles of beer on the wall, 3 bottles of beer.",
"Take one down and pass it around, 2 bottles of beer on the wall.\n"
)
)
})
test_that("verse 2", {
expect_equal(
verse(2),
paste(sep = "\n",
"2 bottles of beer on the wall, 2 bottles of beer.",
"Take one down and pass it around, 1 bottle of beer on the wall.\n"
)
)
})
test_that("verse 1", {
expect_equal(
verse(1),
paste(sep = "\n",
"1 bottle of beer on the wall, 1 bottle of beer.",
"Take it down and pass it around, no more bottles of beer on the wall.\n"
)
)
})
test_that("verse 0", {
expect_equal(
verse(0),
paste(sep = "\n",
"No more bottles of beer on the wall, no more bottles of beer.",
"Go to the store and buy some more, 99 bottles of beer on the wall.\n"
)
)
})
test_that("first two verses", {
expect_equal(
lyrics(99, 98),
paste(sep = "\n",
"99 bottles of beer on the wall, 99 bottles of beer.",
"Take one down and pass it around, 98 bottles of beer on the wall.\n",
"98 bottles of beer on the wall, 98 bottles of beer.",
"Take one down and pass it around, 97 bottles of beer on the wall.\n"
)
)
})
test_that("last three verses", {
expect_equal(
lyrics(2, 0),
paste(sep = "\n",
"2 bottles of beer on the wall, 2 bottles of beer.",
"Take one down and pass it around, 1 bottle of beer on the wall.\n",
"1 bottle of beer on the wall, 1 bottle of beer.",
"Take it down and pass it around, no more bottles of beer on the wall.\n",
"No more bottles of beer on the wall, no more bottles of beer.",
"Go to the store and buy some more, 99 bottles of beer on the wall.\n"
)
)
})
test_that("last three verses", {
expect_equal(
lyrics(2, 0),
paste(sep = "\n",
"2 bottles of beer on the wall, 2 bottles of beer.",
"Take one down and pass it around, 1 bottle of beer on the wall.\n",
"1 bottle of beer on the wall, 1 bottle of beer.",
"Take it down and pass it around, no more bottles of beer on the wall.\n",
"No more bottles of beer on the wall, no more bottles of beer.",
"Go to the store and buy some more, 99 bottles of beer on the wall.\n"
)
)
})
first <- 10
last <- 8
sapply(first:last, verse)
paste(sapply(first:last, verse), collapse = "\n")
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
first_line <- function(n) {
if (n == 0) {
"No more bottles of beer on the wall, no more bottles of beer."
}
else if (n == 1) {
"1 bottle of beer on the wall, 1 bottle of beer."
}
else {
lyrics <- "%d bottles of beer on the wall, %d bottles of beer."
sprintf(lyrics, number, number, number -1)
}
}
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
verse <- function(number) {
if (number == 0) {
paste(sep = "\n",
first_line(number),
"Go to the store and buy some more, 99 bottles of beer on the wall.\n"
)
}
else if (number == 1) {
paste(sep = "\n",
first_line(number),
"Take it down and pass it around, no more bottles of beer on the wall.\n"
)
}
else if (number == 2) {
lyrics <- paste(sep = "\n",
first_line(number),
"Take one down and pass it around, %d bottle of beer on the wall.\n"
)
sprintf(lyrics, number, number, number -1)
}
else if (number < 100) {
lyrics <- paste(sep = "\n",
first_line(number),
"Take one down and pass it around, %d bottles of beer on the wall.\n"
)
sprintf(lyrics, number, number, number -1)
}
}
verse(99)
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
first_line <- function(n) {
if (n == 0) {
"No more bottles of beer on the wall, no more bottles of beer."
}
else if (n == 1) {
"1 bottle of beer on the wall, 1 bottle of beer."
}
else if (n == 2) {
lyrics <- "%d bottles of beer on the wall, %d bottles of beer."
sprintf(lyrics, number, number)
}
else {
lyrics <- "%d bottles of beer on the wall, %d bottles of beer."
sprintf(lyrics, number, number)
}
}
first_line(99)
first_line <- function(n) {
if (n == 0) {
"No more bottles of beer on the wall, no more bottles of beer."
}
else if (n == 1) {
"1 bottle of beer on the wall, 1 bottle of beer."
}
else if (n == 2) {
lyrics <- "%d bottles of beer on the wall, %d bottles of beer."
sprintf(lyrics, n, n)
}
else {
lyrics <- "%d bottles of beer on the wall, %d bottles of beer."
sprintf(lyrics, n, n)
}
}
first_line(99)
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
capitalize("algo")
install.packages("Hmsinc")
install.packages("Hmisc")
library(Hmisc)
capitalize("algo")
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
?switch
source('~/taller_R/Taller6-Strings/exs/beer_song/beer_song_test.R')
library(nutshell)
install.packages("nutshell")
library(nutshell)
setwd("~/bases/ine/ECH/2013")
library(haven)
list.files()
t <- read_spss("Fusionado_2013_Terceros.sav")
View(t)
table(nomdpto)
table(t$nomdpto)
names(table(t$nomdpto))=
names(table(t$nomdpto))=
names(table(t$nomdpto))
names(table(t$nomdpto))
capitalize(names(table(t$nomdpto)))
capitalize(names(table(t$nomdpto)))
?capitalize
capitalize(tolower(names(table(t$nomdpto))))
list.files()
t <- read_spss("P_2013_Terceros.sav")
View(t)
str(t)
t$pobpcoac
table(t$pobpcoac)
library(tibble)
df <- tibble(
x = c(2, 1, 4, 3, 3, 2, 1, 2, 1, 4),
y = c(1, 4, 1, 2, 2, 4, 2, 2, 0, 4),
group = c("A", "B", "B", "C", "B", "C", "B", "A", "C", "C")
)
df
df %>% group_by(group) %>% lag(x)
library(dplyr)
df <- tibble(
x = c(2, 1, 4, 3, 3, 2, 1, 2, 1, 4),
y = c(1, 4, 1, 2, 2, 4, 2, 2, 0, 4),
group = c("A", "B", "B", "C", "B", "C", "B", "A", "C", "C")
)
df %>% group_by(group) %>% lag(x)
df <- tibble(
x = c(2, 1, 4, 3, 3, 2, 1, 2, 1, 4),
y = c(1, 4, 1, 2, 2, 4, 2, 2, 0, 4),
group = c("A", "B", "B", "C", "B", "C", "B", "A", "C", "C")
)
df %>% group_by(group) %>% lag(x)
df
df %>% group_by(group) %>% mutate(x_1 = lag(x))
?lag
df %>% group_by(group) %>% mutate(x_1 = lag(x, 2))
setwd("~/bases/dgi/xls")
list.files()
dgi.48 <- read_xls("Formulario 2148 (Año 2015).xlsx")
library(readxl)
dgi.48 <- read_xls("Formulario 2148 (Año 2015).xlsx")
dgi.48 <- read_xlsx("Formulario 2148 (Año 2015).xlsx")
warnings()
View(dgi.48)
names(dgi.48)
list.files()
dgi.48.13 <- read_xlsx("Pedido_2016-05-04_(F_2148)_2012_2016-05-04 (aj).xls")
dgi.48.13 <- read_xls("Pedido_2016-05-04_(F_2148)_2012_2016-05-04 (aj).xls")
names(dgi.41.13)
names(dgi.48.13)
names(dgi.48)
View(dgi.48.13)
?read_xls
dgi.48.13 <- read_xls("Pedido_2016-05-04_(F_2148)_2012_2016-05-04 (aj).xls", skip=1)
View(dgi.48.13)
names(dgi.48)
names(dgi.48)
x1 <- c("Dec", "Abr", "Ene", "Mar")
str(x1)
sort(x1)
x2 <- c("Dec", "Abr", "Ene", "Marzo")
niveles <- c("Ene", "Feb", "Mar", "Abr",
"May", "Jun", "Jul", "Ag",
"Set", "Oct", "Nov", "Dec")
meses_factor <- factor(x1, levels=niveles)
meses_factor
x2
meses_factor_2 <- factor(x2, levels=niveles)
niveles
meses_factor_2
library(dplyr)
library(forcats)
head(gss_cat)
levels(gss_cat$marital)
library(ggplot2)
ggplot(gss_cat, aes(x=race)) + geom_bar()
ggplot(gss_cat, aes(x=race, y=age)) + geom_point()
ggplot(gss_cat, aes(x=race)) + geom_bar()
levels(gss_cat$marital)
levels(gss_cat$race)
ggplot(gss_cat, aes(x=race)) + geom_bar() + scale_x_discrete(drop=FALSE)
ggplot(gss_cat, aes(x=rincome)) + geom_bar() + theme(axis.text.x=element_text(angle=90))
relig <- gss_cat %>%
group_by(relig) %>%
summarize(
age=mean(age, na.rm=TRUE),
tvhours=mean(tvhours, na.rm=TRUE),
n=n()
)
relig
ggplot(relig, aes(tvhours, relig)) + geom_point()
ggplot(relig, aes(tvhours, relig_factor)) + geom_point()
relig <- relig %>%
mutate(relig_factor = fct_reorder(relig, tvhours))
ggplot(relig, aes(tvhours, relig_factor)) + geom_point()
relig
levels(relig$relig)
levels(relig$relig_factor)
rincome <- gss_cat %>%
group_by(rincome) %>%
summarize(
age = mean(age, na.rm=TRUE),
tvhours = mean(tvhours, na.rm=TRUE),
n=n()
)
ggplot(rincome,
aes(tvhours, rincome)) + geom_point()
partyid = fct_recode(partyid,
"Republican, strong" = "Strong republican",
"Republican, weak" = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak" = "Not str democrat",
"Democrat, strong" = "Strong democrat"
)) %>%
count(partyid)
partyid = fct_recode(partyid,
"Republican, strong" = "Strong republican",
"Republican, weak" = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak" = "Not str democrat",
"Democrat, strong" = "Strong democrat"
)) %>%
count(partyid)
gss_cat
names(gss_cat)
partyid = fct_recode(partyid,
"Republican, strong" = "Strong republican",
"Republican, weak" = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak" = "Not str democrat",
"Democrat, strong" = "Strong democrat"
)) %>%
count(partyid)
partyid = fct_recode(partyid,
"Republican, strong" = "Strong republican",
"Republican, weak" = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak" = "Not str democrat",
"Democrat, strong" = "Strong democrat"
)) %>%
count(partyid)
gss_cat
gss_cat %>%
mutate(
partyid = fct_recode(partyid,
"Republican, strong" = "Strong republican",
"Republican, weak" = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak" = "Not str democrat",
"Democrat, strong" = "Strong democrat"
)) %>%
count(partyid)
gss_cat %>%
mutate(partyid = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
count(partyid)
gss_cat %>%
mutate(relig = fct_lump(relig, n = 10)) %>%
count(relig, sort = TRUE)
gss_cat %>% count(relig, sort = TRUE)
95+93+71+32+23+15
95+93+71+32+23+15+224
+93+71+32+23+15+224
gss_cat %>%
mutate(partyid = fct_recode(partyid,
"Republican" = "Strong republican",
"Republican" = "Not str republican",
"Other" = "Ind,near rep",
"Other" = "Ind,near dem",
"Democrat" = "Not str democrat",
"Democrat" = "Strong democrat",
"AOther" = "No answer",
"AOther" = "Don't know",
"AOther" = "Other party"
)) %>%
count(partyid)
?fct_lump
gss_cat %>%
mutate(relig = fct_lump(relig, n = 10, other_level="otros")) %>%
count(relig, sort = TRUE)
+93+71+32+23+15+224
+93+71+32+23+15
library(Hmisc)
lyrics <- function(first, last) {
paste(sapply(first:last, verse), collapse = "\n")
}
first_line <- function(n) {
if (n == 0) {
a <- "no more bottles"
}
else if (n == 1) {
a <- sprintf("%d bottle", n)
}
else {
a <- sprintf("%d bottles", n)
}
lyrics <- "%s of beer on the wall, %s of beer."
sprintf(lyrics, capitalize(a), a)
}
second_line <- function(n) {
if (n == 0) {
return("Go to the store and buy some more, 99 bottles of beer on the wall.\n")
}
else if (n == 1) {
a <- "it"
b <- "no more bottles"
}
else if (n == 2) {
a <- "one"
b <- "1 bottle"
}
else {
a <- "one"
b <- sprintf("%d bottles", n-1)
}
lyrics <- "Take %s down and pass it around, %s of beer on the wall.\n"
sprintf(lyrics, a, b)
}
verse <- function(number) {
paste(sep = "\n",
first_line(number),
second_line(number)
)
}
lyrics(99, 1)
lyrics(99, 0)
verse(99)
verse(0)
lyrics <- "%s of beer on the wall, %s of beer."
lyrics
sprintf(lyrics, "algo")
sprintf(lyrics, "algo", "nada")
setwd("~/taller_git")
source('~/taller_git/main.R')
sectores <- tibble(ciiu = c("0111", "0110", "0112"),
giro = c("arroz", "soja", "carne"))
expors <- tibble(empresa = c("ZZZ", "YYY", "XXX", "WWW", "NNN"),
expors = c(10000, 9000,    8000, 3000, 1000 ))
library(tibble)
sectores <- tibble(ciiu = c("0111", "0110", "0112"),
giro = c("arroz", "soja", "carne"))
expors <- tibble(empresa = c("ZZZ", "YYY", "XXX", "WWW", "NNN"),
expors = c(10000, 9000,    8000, 3000, 1000 ))
print("hola")
getwd()
setwd("~/taller_git")
library(tibble)
sectores <- tibble(ciiu = c("0111", "0110", "0112"),
giro = c("arroz", "soja", "carne"))
expors <- tibble(empresa = c("ZZZ", "YYY", "XXX", "WWW", "NNN", "RRR"),
expors = c(10000, 9000,    8000, 3000, 1000, 500 ),
ciiu   = c("0111", "0111", "0112", "0110", "1011"))
sectores <- tibble(ciiu = c("0111", "0110", "0112"),
giro = c("arroz", "soja", "carne"))
expors <- tibble(empresa = c("ZZZ", "YYY", "XXX", "WWW", "NNN", "RRR"),
expors = c(10000, 9000,    8000, 3000, 1000, 500 ),
ciiu   = c("0111", "0111", "0112", "0110", "1011", "0112"))
source('~/taller_git2/main.R')
source('~/taller_git2/main.R')
expors
sectores
print("Hello")
source('~/taller_git2/main.R')
cat("algo")
print("algo")
print("algo") %>% str
library(dplyr)
print("algo") %>% str
cat("algo") %>% str
print("algo") %>% is.vector
cat("algo") %>% is.vector
cat("algo") %>% typeof
download_file("http://www.asdar-book.org/datasets/70042108.zip")
install.packages("dwapi")
library(dwapi)
download_file("http://www.asdar-book.org/datasets/70042108.zip")
?download_file
url <- "http://www.asdar-book.org/datasets/70042108.zip"
basename(url)
download_file("http://www.asdar-book.org/datasets/70042108.zip", basename(url))
download.file("http://www.asdar-book.org/datasets/70042108.zip", basename(url))
list.files()
